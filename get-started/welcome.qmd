---
title: "Welcome to Shiny"
editor:
  markdown:
    wrap: sentence
---

Shiny for Python is a powerful and beginner-friendly framework for building interactive web applications and dashboards, all in pure Python.
Whether you‚Äôre a data scientist, analyst, or developer, Shiny makes it easy to create rich, interactive experiences without needing to learn JavaScript or front-end frameworks.

## Batteries included: everything you need to build a dashboard {#batteries-included}

Shiny for Python comes fully equipped with everything you need to build a dashboard right out of the box.
It includes a rich set of [input and output components](/components) so you can quickly build interactive applications without worrying about external dependencies.
Layout options let you organize your UI efficiently, while built-in theming (including dark mode) ensures your app looks great with minimal effort.
You can even use a [brand.yml](https://posit-dev.github.io/brand-yml/) file to apply consistent branding, colors, and logos across your application.

## Reactivity: the secret to seamless interactivity {#reactivity}

At the heart of Shiny is [reactivity](../docs/reactive-foundations.qmd), a system that automatically updates outputs when inputs change.
Unlike traditional web apps, where you need to manually handle state and data updates with callbacks, Shiny‚Äôs reactive engine keeps everything in sync effortlessly.
For example, when a user interacts with a slider or selects a filter, reactivity figures out the **minimum** amount of calculations to update the outputs without requiring you to write complex event-handling code.
This makes Shiny ideal for fast data-driven applications, enabling live updates for charts, tables, and reports with minimal effort,
and gives you the confidence that results are accurately rendered.

## Templates: get started quickly {#templates}

To help you hit the ground running, Shiny provides starter [templates](/templates/) for common use cases, such as data dashboards, applications, streaming updates, data entry.

The `shiny create` command walks you through a series of prompts to help you get started quickly with a helpful example.
You can use this command to load up a basic dashboard:

```bash
shiny create --template dashboard
```

::::: {.column-screen .hero-image .pt-4 .pb-5 style="margin-top:0px;max-width:1600px;"}
::: {.hello-output .g-col-12 .g-col-xl-12}
<iframe
  src="https://gallery.shinyapps.io/template-dashboard/"
  frameborder="0"
  width="100%"
  class="mb-0 card hello-output-iframe"
></iframe>

<style>
  .hello-output-iframe {
    height: 900px;
  }
@media only screen and (max-width: 611px) {
  .hello-output-iframe {
    height: 2125px;
  }
}
</style>
:::
:::



:::::


## Extensibility: customize and expand as needed {#extensible}

While Shiny includes everything you need to build an app, is built on a foundation of web standards, making it highly extensible.
If you need a custom component or user interface, you can incrementally integrate JavaScript, HTML, or even WebAssembly without having to learn complicated build tooling and frameworks.

The UI components themselves are built on a Python representation of HTML/CSS/JavaScript, which you can see by printing them in a Python REPL:

```python
>>> from shiny import ui
>>> ui.input_action_button("btn", "Button")
<button class="btn btn-default action-button" id="btn" type="button">Button</button>
```

If you're versed in web programming, you can also use Shiny to create [custom components](../docs/custom-component-one-off.qmd) that leverage your favorite JavaScript framework from Python.

## Why choose Shiny for Python?

Why Choose Shiny for Python?

- üêç No JavaScript required ‚Äì Build full-featured interactive apps in pure Python.
- ‚ö° Fast iteration ‚Äì The reactive model allows quick and dynamic updates.
- üé® Built-in theming and layout ‚Äì Make beautiful dashboards effortlessly.
- üöÄ Scalability and extensibility ‚Äì Start simple, grow as needed.

Shiny for Python empowers you to bring your data to life with interactive applications that are easy to build, customize, and share.

Ready to give it a try?
